'use strict';

const express = require(`express`);
const request = require(`supertest`);
const Sequelize = require(`sequelize`);

const initDB = require(`../lib/init-db`);
const search = require(`./search`);
const DataService = require(`../data-service/search`);

const {HttpCode} = require(`../../constants`);

const mockCategories = [
  `Музыка`,
  `Деревья`,
  `За жизнь`
];

const mockData = [
  {
    "comments": [
      {
        "text": `Мне кажется или я уже читал это где-то? `},
      {
        "text": `Это где ж такие красоты? Совсем немного...`},
      {
        "text": `Давно не пользуюсь стационарными компьютерами. Ноутбуки победили. Планируете записать видосик на эту тему?`
      }],
    "title": `Ёлки. История деревьев`,
    "announce": `Как начать действовать? Для начала просто соберитесь. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Первая большая ёлка была установлена только в 1938 году. Программировать не настолько сложно, как об этом говорят. Это один из лучших рок-музыкантов.`,
    "fullText": `Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Собрать камни бесконечности легко, если вы прирожденный герой. Достичь успеха помогут ежедневные повторения. Простые ежедневные упражнения помогут достичь успеха.`,
    "categories": [`Разное`, `Программирование`]
  },
  {
    "comments": [
      {
        "text": `Это где ж такие красоты?`
      }
    ],
    "title": `Ёлки. История деревьев`,
    "announce": `Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Простые ежедневные упражнения помогут достичь успеха. Как начать действовать? Для начала просто соберитесь.`,
    "fullText": `Золотое сечение — соотношение двух величин, гармоническая пропорция. Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Это один из лучших рок-музыкантов.`,
    "categories": [`Музыка`]},
  {
    "comments": [
      {
        "text": `Давно не пользуюсь стационарными компьютерами. Ноутбуки победили.`
      },
      {
        "text": `Согласен с автором!`
      },
      {
        "text": `Совсем немного... Это где ж такие красоты?`
      }
    ],
    "title": `Как перестать беспокоиться и начать жить`,
    "announce": `Это один из лучших рок-музыкантов. Золотое сечение — соотношение двух величин, гармоническая пропорция. Первая большая ёлка была установлена только в 1938 году. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать.`,
    "fullText": `Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Процессор заслуживает особого внимания. Он обязательно понравится геймерам со стажем. Простые ежедневные упражнения помогут достичь успеха.`,
    "categories": [`За жизнь`, `Программирование`, `Железо`]},
  {
    "comments": [
      {
        "text": `Плюсую, но слишком много буквы! Согласен с автором!`
      },
      {
        "text": ` Плюсую, но слишком много буквы! Мне кажется или я уже читал это где-то?`
      },
      {
        "text": `Хочу такую же футболку :-)`
      }
    ],
    "title": `Что такое золотое сечение`,
    "announce": `Вы можете достичь всего. Стоит только немного постараться и запастись книгами. Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Собрать камни бесконечности легко, если вы прирожденный герой. Золотое сечение — соотношение двух величин, гармоническая пропорция.`,
    "fullText": `Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле?, Ёлки — это не просто красивое дерево. Это прочная древесина. Он написал больше 30 хитов.`,
    "categories": [`Кино`, `За жизнь`]},
  {
    "comments": [
      {
        "text": `Это где ж такие красоты?`
      },
      {
        "text": ` Давно не пользуюсь стационарными компьютерами. Ноутбуки победили.`
      },
      {
        "text": `Плюсую, но слишком много буквы!`
      }
    ],
    "title": `Самый лучший музыкальный альбом этого года`,
    "announce": `Как начать действовать? Для начала просто соберитесь. Из под его пера вышло 8 платиновых альбомов. Ёлки — это не просто красивое дерево. Это прочная древесина.`,
    "fullText": `Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете. Он написал больше 30 хитов. Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать. Собрать камни бесконечности легко, если вы прирожденный герой. Золотое сечение — соотношение двух величин, гармоническая пропорция.`,
    "categories": [`За жизнь`]
  }
];

const mockDB = new Sequelize(`sqlite::memory:`, {logging: false});

const app = express();
app.use(express.json());

beforeAll(async () => {
  await initDB(mockDB, {categories: mockCategories, articles: mockData});
  search(app, new DataService(mockDB));
});

describe(`API returns article based on search query`, () => {

  let response;

  beforeAll(async () => {
    response = await request(app)
      .get(`/search`)
      .query({
        query: `Что такое золотое сечение`
      });
  });

  test(`Status code 200`, () => expect(response.statusCode).toBe(HttpCode.OK));

  test(`1 articles found`, () => expect(response.body.length).toBe(1));

  test(`Article has correct title`, () => expect(response.body[0].title).toBe(`Ёлки. История деревьев`));
});

test(`API returns code 404 if nothing is found`,
    () => request(app)
      .get(`/search`)
      .query({
        query: `Продам пианино`
      })
      .expect(HttpCode.NOT_FOUND)
);

test(`API returns 400 when query string is absent`,
    () => request(app)
      .get(`/search`)
      .expect(HttpCode.BAD_REQUEST)
);
